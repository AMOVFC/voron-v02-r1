# This file contains common pin mappings for the BIGTREETECH SKR Pico V1.0
# To use this config, the firmware should be compiled for the RP2040 with
# USB communication.

# The "make flash" command does not work on the SKR Pico V1.0. Instead,
# after running "make", copy the generated "out/klipper.uf2" file
# to the mass storage device in RP2040 boot mode

# See docs/Config_Reference.md for a description of parameters.
[mcu]
serial: /dev/serial/by-id/usb-Klipper_rp2040_50443403101C851C-if00
restart_method: command

[duplicate_pin_override]
pins: gpio16,

[stepper_x]
step_pin: gpio6
dir_pin: gpio5
enable_pin: !gpio7


[tmc2209 stepper_x]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 2
diag_pin: ^gpio3


[stepper_y]
step_pin: gpio11
dir_pin: gpio10
enable_pin: !gpio12


[tmc2209 stepper_y]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 0
diag_pin: ^gpio4


[stepper_z]
step_pin: gpio19
dir_pin: !gpio28
enable_pin: !gpio2
endstop_pin: ^gpio25


[tmc2209 stepper_z]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 1


[heater_bed]
heater_pin: gpio21
sensor_type: Generic 3950
sensor_pin: gpio27

[temperature_fan pico_fan]
pin: gpio20
shutdown_speed: 0
sensor_type: temperature_mcu
control: pid
pid_Kp: 10
pid_Ki: 0.1
pid_Kd: 1
target_temp: 80
max_temp: 90  # Turns on at 80Â°C
min_temp: 15

[temperature_fan Pi_fan]
pin: gpio18
shutdown_speed: 0
sensor_type: temperature_host
control: pid
pid_Kp: 10
pid_Ki: 0.1
pid_Kd: 1
target_temp: 55
max_temp: 90
min_temp: 15

[temperature_sensor Chamber]
sensor_pin: gpio26
pullup_resistor:4700
sensor_type: NTC 100K MGB18-104F39050L32


[neopixel board_neopixel]
pin: gpio24
chain_count: 1
color_order: GRB
initial_RED: 0.3
initial_GREEN: 0.3
initial_BLUE: 0.3

#[bltouch]
#sensor_pin: gpio22
#control_pin: gpio29




[gcode_button sp_sensor]
pin: ^gpio16    # Filament Sensor pin - keep ^ pullup symbol
press_gcode:
  _SP_BUTTON_IN
release_gcode:
  _SP_BUTTON_OUT
  

[filament_switch_sensor sp_sensor_runout]
switch_pin: ^gpio16    # Filament Sensor pin - keep ^ pullup symbol
pause_on_runout: False
insert_gcode:
  _SP_SENSOR_IN
runout_gcode:
  _SP_SENSOR_OUT
event_delay: 0.5
pause_delay: 1.0

[servo sp_servo]
pin: gpio29    # Servo pin
initial_angle: 0
maximum_servo_angle: 180
minimum_pulse_width: 0.000700
maximum_pulse_width: 0.002300


[manual_stepper sp_motor]  
step_pin: gpio14
dir_pin: !gpio13
enable_pin: !gpio15
full_steps_per_rotation: 200
rotation_distance: 17.64                # Needs calibration after final tuning - start with a 10mm forward movement to eliminate backlash, and then extrude 100mm for measurement - use SP_FORCE_MOVE_LANE for calibrating distances
# endstop_pin: ^PICO_MMU: PB6              # Filament Sensor pin - keep ^ pullup symbol
microsteps: 16


[tmc2209 manual_stepper sp_motor]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 3
run_current: 0.7           # Adjust depending on your motor current ( Motor Rated Current * 0.707(RMS) * 0.8(Safety Factor) )
interpolate: true
stealthchop_threshold: 99999